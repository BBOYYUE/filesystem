<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateFilesystemTable extends Migration

{
    /**
     * 运行迁移
     *
     * @return void
     */
    public function up()
    {
        Schema::create('filesystems', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->tinyInteger('type')->comment("类型 Dir 和 data 两种");
            $table->tinyInteger('status')->comment("当前状态");
            $table->tinyInteger('use_type')->comment("文件使用类型");
            $table->string('uuid')->comment("一个基本上不可能重复的唯一标识符");
            $table->string('alias')->comment("一个随机的文件名");
            $table->unsignedInteger('order')->default(0)->comment("排序字段");
            $table->string('extension')->default('')->comment("文件类型");
            $table->string('model_type')->default('')->comment("模型类型");
            $table->bigInteger('filesize')->default(0)->comment("文件大小");
            $table->bigInteger('parent_id')->default(0)->comment("父级id");
            $table->bigInteger('model_id')->default(0)->comment("模型id, 文件资源可以和资源相互绑定");
            $table->bigInteger('user_id')->default(0)->comment('文件所有者');
            $table->bigInteger('group_id')->default(0)->comment('文件所有用户组');
            $table->timestamps();
            $table->softDeletes($column = 'deleted_at', $precision = 0);
        });
    }

    /**
     * 回滚迁移
     *
     * @return void
     */
    public function down()
    {
        Schema::drop('filesystems');
    }
}